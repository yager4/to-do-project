{"version":3,"sources":["state management/TodoReducer.js","services/utils.js","services/Todo.js","services/storageService.js","services/todoClass.js","services/TodoService.js","state management/actionTodo.js","cmp/EditPreview.js","pages/TodoEdit.js","cmp/AddTodo.js","cmp/TodoPreview.js","cmp/ToDoList.js","cmp/FilterTodo.js","pages/todoApp.js","App.js","serviceWorker.js","index.js"],"names":["initialState","todos","getRandomID","letters","id","i","ind","Math","floor","random","length","getFormattedDate","Date","toLocaleDateString","getFormattedTime","date","hours","getHours","minutes","getMinutes","ampm","day","_id","utils","toDos","store","key","any","localStorage","JSON","stringify","load","str","parse","Todo","txt","this","isDone","txtId","getTodos","filterBy","Promise","resolve","gTodos","filter","todo","some","toLowerCase","includes","editTodo","deleteTodo","todoParentId","toDoId","todoChild","todoChildIndex","findIndex","indexChildTodosRemove","newChildTodos","update","$splice","$set","storageService","getTodoById","TodoId","find","dragAndDropSave","addTodo","todoToEdit","a","console","log","todoIndex","newGtodo","todoId","newToDo","TODO","newTodo","$push","loadTodos","dispatch","TodoService","setTodos","type","updateTodo","err","EditPreview","state","toDo","index","handlerChange","ev","value","target","setState","prvState","props","style","border","className","name","onChange","width","txtLength","onClick","removeTodo","size","textShadow","fontSize","Component","TodoEdit","isOnEdit","txtIndex","newState","onEdit","todoTedit","stateTodo","then","becomeEditable","prveProp","Object","entries","map","Button","animated","Content","hidden","visible","Icon","mapDispatchToProps","connect","AddTodo","handleOnChange","PreviewTodo","isEdit","numberOfAdd","prevState","droppableId","Provided","snapshot","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","userSelect","handlerMarkTodoTxt","textDecoration","placeholder","ListToDo","onDragEnd","res","filterTodo","Input","handleFilter","todoApp","result","destination","resultCopy","source","columnSourceTodo","columnDestinationTodo","splice","removed","columnTodo","copiedItems","todosForEdit","toDoIndex","newTodos","filterByTxt","ToDoList","App","component","path","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9b9e06ae.chunk.js","sourcesContent":["const initialState = {\r\n    todos: []\r\n};\r\n\r\n\r\nexport default function toDoReducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'GET_TODOS':\r\n            return { ...state, todos: action.todos }\r\n        case 'GET_TODO':\r\n            return { ...state, toDos: action.toDos }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","export default {\r\n    getRandomID,\r\n    getFormattedDate,\r\n    getFormattedTime\r\n}\r\n\r\nfunction getRandomID() {\r\n    let letters = '1234567890poiiytreqwasdfghjklmnbvcxxssersgyushquiz';\r\n    let id = '';\r\n    for (let i = 0; i < 10; i++) {\r\n        let ind = Math.floor(Math.random() * letters.length)\r\n        id += letters[ind];\r\n    }\r\n    return id;\r\n}\r\n\r\nfunction getFormattedDate(){\r\n    let date = new Date().toLocaleDateString(\"en-US\");\r\n    return date;\r\n}\r\n\r\nfunction getFormattedTime(){\r\n  var date = new Date();  \r\n  var hours = date.getHours();\r\n  var minutes = date.getMinutes();\r\n  var ampm = hours >= 12 ? 'pm' : 'am';\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n  minutes = minutes < 10 ? '0'+minutes : minutes;\r\n  var strTime = hours + ':' + minutes + ' ' + ampm;\r\n  return strTime;\r\n}\r\n\r\n\r\n\r\n","import utils from './utils.js';\r\nexport default\r\n    [\r\n        {\r\n            day: 'Sunday',\r\n            _id: utils.getRandomID(),\r\n\r\n            toDos:[]\r\n                \r\n        },\r\n        {\r\n            day: 'Monday',\r\n            _id: utils.getRandomID(),\r\n\r\n            toDos:[]\r\n            \r\n        },\r\n        {\r\n            day: 'Tuesday',\r\n            _id: utils.getRandomID(),\r\n\r\n            toDos:[]\r\n             \r\n        },\r\n        {\r\n            day: 'Wednesday',\r\n            _id: utils.getRandomID(),\r\n\r\n            toDos:[]\r\n             \r\n        },\r\n        {\r\n            day: 'Thursday',\r\n            _id: utils.getRandomID(),\r\n\r\n            toDos:[]\r\n             \r\n        },\r\n        {\r\n            day: 'Friday',\r\n            _id: utils.getRandomID(),\r\n\r\n            toDos:[]\r\n                \r\n        },\r\n        {\r\n            day: 'Saturday',\r\n            _id: utils.getRandomID(),\r\n            toDos:[]\r\n             \r\n        },\r\n\r\n    ]\r\n","\r\n\r\nfunction store(key, any) {\r\n    localStorage[key] = JSON.stringify(any);\r\n}\r\n\r\nfunction load(key) {\r\n    var str = localStorage[key] || 'null';\r\n    return JSON.parse(str);\r\n}\r\n\r\nexport default{\r\n    store,\r\n    load\r\n}","import utils from './utils.js';\r\nexport default class Todo {\r\n    constructor(txt) {\r\n        this.txt = txt\r\n        this.isDone = false\r\n        this.txtId = utils.getRandomID()\r\n\r\n\r\n    }\r\n\r\n}","import todos from './Todo.js';\r\nimport storageService from '../services/storageService.js';\r\nimport update from 'immutability-helper';\r\nimport TODO from './todoClass.js'\r\n\r\n\r\nexport default {\r\n    getTodos,\r\n    editTodo,\r\n    deleteTodo,\r\n    getTodoById,\r\n    dragAndDropSave,\r\n    addTodo\r\n}\r\n\r\nlet gTodos = storageService.load('todos') || todos;\r\n\r\n\r\n\r\nfunction getTodoById(TodoId) {\r\n\r\n    const toDos = gTodos.find(toDos => toDos._id === TodoId)\r\n    return Promise.resolve(toDos)\r\n}\r\n\r\nasync function editTodo(todoToEdit) {\r\n    console.log(todoToEdit)\r\n    const todoIndex = await gTodos.findIndex(todo => todo._id === todoToEdit._id)\r\n\r\n    const newGtodo = update(gTodos, {\r\n        [todoIndex]:\r\n            { $set: todoToEdit }\r\n    })\r\n    \r\n    gTodos = [...newGtodo]\r\n    storageService.store('todos', gTodos)\r\n}\r\n\r\nfunction getTodos(filterBy) {\r\n    if (filterBy === '') {\r\n        return Promise.resolve([...gTodos]);\r\n\r\n    }\r\n \r\n    return gTodos.filter(todo => {\r\n\r\n        return todo.toDos.some(txt=>{\r\n            return txt.txt.toLowerCase().includes(filterBy.toLowerCase())\r\n        })\r\n    })\r\n}\r\n\r\nasync function addTodo(txt, todoId) {\r\n    const todo = await { ...gTodos.find(todo => todo._id === todoId) }\r\n    const todoIndex = gTodos.findIndex(todo => todo._id === todoId)\r\n\r\n    const newToDo = new TODO(txt);\r\n\r\n    const newTodo = update(todo, { toDos: { $push: [newToDo] } })\r\n    gTodos = update(gTodos, {\r\n        [todoIndex]: { $set: newTodo }\r\n\r\n    })\r\n    storageService.store('todos', gTodos)\r\n\r\n    return true\r\n\r\n}\r\nfunction deleteTodo(todoParentId, toDoId) {\r\n    const [todoChild] = [...gTodos.filter(todo => todo._id === todoParentId)]\r\n    const todoChildIndex = gTodos.findIndex(todo => todo._id === todoParentId)\r\n\r\n    const indexChildTodosRemove = todoChild.toDos.findIndex(todo => todo.txtId === toDoId)\r\n    const newChildTodos = update(todoChild, { toDos: { $splice: [[indexChildTodosRemove, 1]] } })\r\n    gTodos = update(gTodos, {\r\n        [todoChildIndex]: { $set: newChildTodos }\r\n\r\n    })\r\n    storageService.store('todos', gTodos)\r\n\r\n    return true\r\n}\r\nfunction dragAndDropSave(todos) {\r\n    gTodos = [...todos]\r\n    storageService.store('todos', gTodos)\r\n}\r\n","import TodoService from '../services/TodoService.js'\r\n\r\nexport function loadTodos(filterBy = '') {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            const toDos = await TodoService.getTodos(filterBy);\r\n            dispatch(setTodos(toDos))\r\n\r\n        } catch (err) {\r\n            console.log('TodoActions: err in loadTodo', err);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\nfunction setTodos(todos) {\r\n    return {\r\n        type: 'GET_TODOS',\r\n        todos\r\n\r\n    }\r\n}\r\nexport function getTodoById(id) {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            const toDos = await TodoService.getTodoById(id);\r\n\r\n            dispatch(getTodo(toDos))\r\n\r\n        } catch (err) {\r\n            console.log('TodoActions: err in getTodoById', err);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\nfunction getTodo(toDos) {\r\n    return {\r\n        type: 'GET_TODO',\r\n        toDos\r\n\r\n    }\r\n}\r\nexport function updateTodo(todo) {\r\n    return async (dispatch) => {\r\n        try {\r\n            console.log(todo)\r\n            TodoService.editTodo(todo)\r\n        } catch (err) {\r\n            console.log('onEdit: err in updateTodo', err);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\nexport function removeTodo(todoId, toDoId) {\r\n    return async () => {\r\n        try {\r\n            TodoService.deleteTodo(todoId, toDoId)\r\n        } catch (err) {\r\n            console.log('deleteTodo: err in removeTodo', err);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport FontAwesome from 'react-fontawesome'\r\n\r\n\r\n\r\nexport default class EditPreview extends Component {\r\n\r\n    state = {\r\n        toDo: {},\r\n        index: ''\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { props } = this\r\n        if (props.toDo !== this.state.toDo) {\r\n            this.setState({ toDo: props.toDo })\r\n            this.setState({ index: props.index })\r\n        }\r\n    }\r\n    handlerChange = (ev) => {\r\n        const value = ev.target.value\r\n\r\n        this.setState(prvState => ({ ...prvState, toDo: { ...prvState.toDo, txt: value } }))\r\n    }\r\n    render() {\r\n        const { state } = this\r\n        const { props } = this\r\n        if (!props.toDo) {\r\n            return <div></div>\r\n\r\n        }\r\n\r\n        return (\r\n            <div style={{ border: 0 }} className=\"toDoList-contaner\" >\r\n\r\n                <textarea\r\n                    name={state.toDo.txtId}\r\n                    type=\"text\"\r\n                    className=\"txt-container\"\r\n                    value={props.toDo.txt}\r\n                    onChange={this.props.handlerChange}\r\n                    style={{ width: props.txtLength }} />\r\n                <FontAwesome\r\n                    onClick={() => props.removeTodo(props.todoParentId, state.toDo.txtId)}\r\n                    className=\"fas fa-trash\"\r\n                    name=\"fas fa-trash\"\r\n                    size=\"2x\"\r\n                    style={{ textShadow: '0 1px 0 rgba(0, 0, 0, 0.1)', fontSize: '30px' }}\r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Icon } from 'semantic-ui-react'\r\nimport update from 'immutability-helper';\r\n\r\n\r\nimport EditPreview from '../cmp/EditPreview.js'\r\nimport { updateTodo, loadTodos } from '../state management/actionTodo.js'\r\n\r\n\r\n\r\n\r\nclass TodoEdit extends Component {\r\n\r\n    state = {\r\n        todo: {},\r\n        isOnEdit: false\r\n\r\n    }\r\n    componentDidMount() {\r\n        const { props } = this\r\n        this.setState({ todo: props.toDos })\r\n\r\n    }\r\n    componentDidUpdate(prveProp) {\r\n        const { props } = this\r\n        if (prveProp.toDos !== props.toDos) {\r\n            this.setState({ todo: props.toDos })\r\n\r\n        }\r\n    }\r\n\r\n    handlerChange = (ev) => {\r\n\r\n        const { todo } = this.state\r\n        const value = ev.target.value\r\n        const id = ev.target.name\r\n        const txtIndex = todo.toDos.findIndex(toDo => toDo.txtId === id)\r\n        const newState = update(this.state.todo, {\r\n            toDos: {\r\n                [txtIndex]: {\r\n                    txt: { $set: value }\r\n                }\r\n            }\r\n        })\r\n\r\n        this.setState({ todo: newState });\r\n\r\n    }\r\n    onEdit = () => {\r\n        const { todo } = this.state\r\n        const { props, state } = this\r\n\r\n        const todoTedit = [...todo.toDos.filter(toDo => toDo.txt !== \"\")]\r\n        const stateTodo = update(todo, {\r\n            toDos: { $set: todoTedit }\r\n        })\r\n        props.updateTodo(stateTodo).then(() => {\r\n            props.becomeEditable()\r\n            props.loadTodos()\r\n        })\r\n    }\r\n    render() {\r\n        const { state } = this\r\n        const { props } = this\r\n\r\n        if (!Object.entries(this.state.todo).length) {\r\n            return <div> </div>\r\n        }\r\n        return (\r\n\r\n            <div className=\"preview-container\" >\r\n                <h1>{state.todo.day}\r\n                </h1>\r\n                <div>{state.todo.toDos.map((toDo, index) => {\r\n                    return (\r\n                        <EditPreview\r\n                            todoParentId={state.todo._id}\r\n                            removeTodo={props.removeTodo}\r\n                            handlerChange={this.handlerChange}\r\n                            index={index}\r\n                            onEdit={this.onEdit}\r\n                            key={toDo.txtId}\r\n                            toDo={toDo}\r\n                            isOnEdit={state.isOnEdit}\r\n                        >\r\n                        </EditPreview>\r\n                    )\r\n                })}</div>\r\n\r\n                <Button onClick={this.onEdit} animated='vertical'>\r\n                    <Button.Content hidden>save</Button.Content>\r\n                    <Button.Content visible>\r\n                        <Icon name='save' size={'big'} />\r\n                    </Button.Content>\r\n                </Button>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateTodo,\r\n    loadTodos\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TodoEdit)\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Button, Icon } from 'semantic-ui-react'\r\n\r\n\r\n\r\nexport default class AddTodo extends Component {\r\n\r\n    state = {\r\n        txt: '',\r\n        todoId: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { props } = this\r\n        this.setState({ todoId: props.todoId })\r\n    }\r\n\r\n    handleOnChange = (ev) => {\r\n        const value = ev.target.value\r\n        this.setState({ txt: value })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { props, state } = this\r\n        return (\r\n            <div className=\"addTodo-container\">\r\n                <textarea value={this.state.txt} onChange={this.handleOnChange}>\r\n                </textarea>\r\n                <div>\r\n                    <Button onClick={() => {\r\n                        this.setState({txt:''})\r\n                        props.addTodo(state.txt, state.todoId)\r\n                    }} animated='vertical'>\r\n                        <Button.Content hidden>save</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name='save' size={'big'} />\r\n                        </Button.Content>\r\n                    </Button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\nimport FontAwesome from 'react-fontawesome'\r\nimport TodoEdit from '../pages/TodoEdit.js'\r\nimport AddTodo from '../cmp/AddTodo.js'\r\n\r\n\r\n\r\n\r\nexport default class PreviewTodo extends Component {\r\n    state = {\r\n        isEdit: false,\r\n        numberOfAdd: true\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        const { props } = this\r\n\r\n        this.setState({ toDos: props.toDos })\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        const { props } = this\r\n\r\n\r\n\r\n\r\n        if (props.todo.toDos.length === 0) {\r\n            if (this.state.isEdit) {\r\n                this.setState({ isEdit: false })\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    becomeEditable = () => {\r\n        this.setState(prevState => ({ isEdit: !prevState.isEdit }))\r\n    }\r\n    render() {\r\n        const { props } = this\r\n        const { state } = this\r\n        const { isEdit } = this.state\r\n\r\n\r\n        return (\r\n            <div>\r\n                {isEdit ?\r\n                    <TodoEdit removeTodo={props.removeTodo} toDos={props.todo} becomeEditable={this.becomeEditable} /> :\r\n                    <div className=\"preview-container\">\r\n                        <FontAwesome onClick={this.becomeEditable}\r\n                            className=\"super-crazy-colors\"\r\n                            name=\"fas fa-edit\"\r\n                            size=\"2x\"\r\n                            // spin\r\n                            style={{ textShadow: '0 1px 0 rgba(0, 0, 0, 0.1)', fontSize: '30px' }}\r\n                        />\r\n                        <h1>{props.todo.day}</h1>\r\n\r\n                        <Droppable droppableId={props.todo._id} key={props.todo._id}>\r\n                            {(Provided, snapshot) => {\r\n                                return <div\r\n                                    ref={Provided.innerRef}\r\n\r\n                                    {...Provided.droppableProps}\r\n                                // style={{ backgroundColor: snapshot.isDraggingOver ? '#263B4A' : '#ffffff' }}\r\n\r\n                                >{props.todo.toDos.map((toDo, index) => {\r\n                                    return (\r\n                                        < Draggable key={toDo.txtId} draggableId={toDo.txtId} index={index} >\r\n                                            {(Provided, snapshot) => {\r\n                                                return <div\r\n                                                    ref={Provided.innerRef}\r\n                                                    {...Provided.draggableProps}\r\n                                                    {...Provided.dragHandleProps}\r\n                                                    className=\"toDoList-contaner\"\r\n                                                    style={{\r\n                                                        userSelect: 'none',\r\n                                                        // backgroundColor: snapshot.isDragov ? '#263B4A' : '#456C86',\r\n                                                        ...Provided.draggableProps.style\r\n                                                    }}>\r\n                                                    <h2\r\n                                                        onClick={() => props.handlerMarkTodoTxt(props.todo._id, toDo)}\r\n                                                        style={{ textDecoration: toDo.isDone ? 'line-through' : '' }}>\r\n                                                        {toDo.txt}\r\n                                                    </h2>\r\n                                                </div>\r\n                                            }}\r\n                                        </Draggable>\r\n\r\n                                    )\r\n                                })}\r\n                                    {Provided.placeholder}\r\n                                    {\r\n                                        state.numberOfAdd ? <AddTodo addTodo={props.addTodo} todoId={props.todo._id} ></AddTodo> :\r\n                                            ''\r\n                                    }\r\n\r\n                                </div>\r\n                            }}\r\n                        </Droppable>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport TodoPreview from './TodoPreview.js'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\n\r\n\r\nfunction ListToDo(props) {\r\n    if (props.todos[1]) {\r\n    }\r\n    return (\r\n        <div className=\"list-container\">\r\n            <DragDropContext onDragEnd={res => props.onDragEnd(res)}>\r\n                {props.todos.map((todo, index) => {\r\n                    return (\r\n                        <TodoPreview\r\n                            removeTodo={props.removeTodo}\r\n                            addTodo={props.addTodo}\r\n                            onDragEnd={props.onDragEnd}\r\n                            key={todo._id}\r\n                            todo={todo}\r\n                            index={index}\r\n                            handlerMarkTodoTxt={props.handlerMarkTodoTxt} >\r\n\r\n                        </TodoPreview>\r\n                    )\r\n\r\n                })}\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ListToDo\r\n\r\n","import React from 'react'\r\nimport { Input } from 'semantic-ui-react'\r\n\r\nexport default function filterTodo(props) {\r\n    return (\r\n        <div className=\"filter-container\">\r\n            <Input onChange={(ev)=>props.handleFilter(ev.target.value)} placeholder='Search...' />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport update from 'immutability-helper';\r\n\r\nimport { loadTodos, updateTodo, removeTodo } from '../state management/actionTodo.js'\r\nimport ToDoList from '../cmp/ToDoList.js'\r\nimport FilterTodo from '../cmp/FilterTodo.js'\r\nimport TodoService from '../services/TodoService.js'\r\n\r\nclass todoApp extends Component {\r\n\r\n    state = {\r\n        filterBy: ''\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.loadTodos()\r\n\r\n    }\r\n\r\n\r\n    onDragEnd = (result) => {\r\n        if (!result.destination) return\r\n        const resultCopy = { ...result }\r\n        const todos = [...this.props.todos]\r\n        const { source, destination } = resultCopy\r\n        if (source.droppableId !== destination.droppableId) {\r\n            const columnSourceTodo = todos.find(todo => todo._id === source.droppableId)\r\n            const columnDestinationTodo = todos.find(todo => todo._id === destination.droppableId)\r\n            const [removed] = columnSourceTodo.toDos.splice(source.index, 1)\r\n            columnDestinationTodo.toDos.splice(destination.index, 0, removed)\r\n        } else {\r\n            const columnTodo = todos.find(todo => todo._id === source.droppableId)\r\n            const copiedItems = [...columnTodo.toDos]\r\n            const [removed] = copiedItems.splice(source.index, 1)\r\n            copiedItems.splice(destination.index, 0, removed)\r\n            columnTodo.toDos = copiedItems\r\n\r\n        }\r\n        TodoService.dragAndDropSave(todos)\r\n\r\n    }\r\n\r\n    handlerMarkTodoTxt = (todoId, newToDo) => {\r\n        const { props } = this\r\n        const todos = [...this.props.todos]\r\n        const todosForEdit = todos.find(todo => todo._id === todoId)\r\n        const toDoIndex = todosForEdit.toDos.findIndex(toDo => toDo.txtId === newToDo.txtId)\r\n\r\n        const newTodos = update(todosForEdit, {\r\n            toDos: {\r\n                [toDoIndex]: {\r\n                    isDone: { $set: !todosForEdit.toDos[toDoIndex].isDone }\r\n                }\r\n            }\r\n        })\r\n        this.props.updateTodo(newTodos).then(() => {\r\n            props.loadTodos()\r\n        })\r\n\r\n    }\r\n    addTodo = (newTodo, todoId) => {\r\n        const { props } = this\r\n        TodoService.addTodo(newTodo, todoId).then(() => {\r\n            props.loadTodos()\r\n        })\r\n\r\n    }\r\n\r\n    removeTodo = (todoParentId, toDoId) => {\r\n        const { props } = this\r\n        props.removeTodo(todoParentId, toDoId).then(() => {\r\n            props.loadTodos()\r\n        })\r\n    }\r\n    handleFilter = (filterByTxt) => {\r\n        this.props.loadTodos(filterByTxt)\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.todos) {\r\n            return <div>Loadong........</div>\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <FilterTodo handleFilter={this.handleFilter}></FilterTodo>\r\n                <ToDoList\r\n                    removeTodo={this.removeTodo}\r\n                    addTodo={this.addTodo}\r\n                    handlerMarkTodoTxt={this.handlerMarkTodoTxt}\r\n                    onDragEnd={this.onDragEnd}\r\n                    todos={this.props.todos}>\r\n                </ToDoList>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadTodos,\r\n    updateTodo,\r\n    removeTodo\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(todoApp)\r\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport React from 'react'\nimport 'semantic-ui-css/semantic.min.css';\nimport 'font-awesome/css/font-awesome.css'\n\n\nimport   './assets/styles/global.scss'\nimport todoApp from './pages/todoApp.js'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route component={todoApp} path=\"/\" ></Route>\n          {/* <Route  path={\"/:id\"} component={TodoEdit} exact ></Route> */}\n\n          {/* <Route component={TodoEdit} path=\"/TodoEdit/:id\" exact></Route> */}\n\n\n        </Switch>\n      </Router>\n\n    </div>\n  )\n}\n\n\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk';\nimport  toDoReducer  from './state management/TodoReducer.js'\n\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(toDoReducer, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}